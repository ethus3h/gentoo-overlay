Index: xbmc/pvrclients/vdr/pvrclient-vdr.cpp
===================================================================
--- xbmc/pvrclients/vdr/pvrclient-vdr.cpp	(revision 25115)
+++ xbmc/pvrclients/vdr/pvrclient-vdr.cpp	(working copy)
@@ -1185,30 +1185,59 @@
     return PVR_ERROR_SERVER_ERROR;
   }
 
+  XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: looping through signalquality vector");
   for (vector<string>::iterator it = lines.begin(); it < lines.end(); it++)
   {
     string& data(*it);
     CStdString str_result = data;
 
     const char *s = str_result.c_str();
+    XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: %s", s);
     if (!strncasecmp(s, "Device", 6))
+    {
       strncpy(qualityinfo.frontend_name, s + 9, sizeof(qualityinfo.frontend_name));
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: frontend_name: %s", qualityinfo.frontend_name);
+    }
     else if (!strncasecmp(s, "Status", 6))
+    {
       strncpy(qualityinfo.frontend_status, s + 9, sizeof(qualityinfo.frontend_status));
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: frontend_status: %s", qualityinfo.frontend_status);
+    }
     else if (!strncasecmp(s, "Signal", 6))
+    {
       qualityinfo.signal = (uint16_t)strtol(s + 9, NULL, 16);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: signal: %s", qualityinfo.signal);
+    }
     else if (!strncasecmp(s, "SNR", 3))
+    {
       qualityinfo.snr = (uint16_t)strtol(s + 9, NULL, 16);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: snr: %s", qualityinfo.snr);
+    }
     else if (!strncasecmp(s, "BER", 3))
+    {
       qualityinfo.ber = (uint32_t)strtol(s + 9, NULL, 16);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: ber: %s", qualityinfo.ber);
+    }
     else if (!strncasecmp(s, "UNC", 3))
+    {
       qualityinfo.unc = (uint32_t)strtol(s + 9, NULL, 16);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: unc: %s", qualityinfo.unc);
+    }
     else if (!strncasecmp(s, "Video", 5))
+    {
       qualityinfo.video_bitrate = strtod(s + 9, NULL);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: video_bitrate: %s", qualityinfo.video_bitrate);
+    }
     else if (!strncasecmp(s, "Audio", 5))
+    {
       qualityinfo.audio_bitrate = strtod(s + 9, NULL);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: audio_bitrate: %s", qualityinfo.audio_bitrate);
+    }
     else if (!strncasecmp(s, "Dolby", 5))
+    {
       qualityinfo.dolby_bitrate = strtod(s + 9, NULL);
+      XBMC_log(LOG_DEBUG, "cPVRClientVDR::SignalQuality: dolby_bitrate: %s", qualityinfo.dolby_bitrate);
+    }
   }
   pthread_mutex_unlock(&m_critSection);
   return PVR_ERROR_NO_ERROR;
